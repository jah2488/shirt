#!/usr/bin/env ruby
require 'shellwords'
require 'readline'
require 'rubygems'
require 'colored'
require 'pry'


class Shirt


  BUILTINS = {
    'cd'     => lambda { |dir  = ENV["HOME"]| Dir.chdir(dir) },
    'exit'   => lambda { |code = 0| exit(code.to_i) },
    'exec'   => lambda { |*command| exec *command },
    'reload' => lambda {  exec './shirt'},
    'set'    => lambda { |args| key, value = args.split('='); ENV[key] = value }
  }

  def eval_command(text)
    case text
    when '~' then Dir.chdir(ENV["HOME"])
    when /`.{0,}`/
      exec text.gsub("`","")
    end
  end

  def self.d_dir
    return Dir.pwd.gsub(ENV["HOME"],"~").green
  end

  #$PROGRAM_NAME = "shirt"
  #ENV['PROMPT'] = ':'

  while line = Readline.readline("[".white+"#{$PROGRAM_NAME}".magenta+"]".white+"[#{d_dir()}]#{ENV['PROMPT']} ".white, true)
    command, *arguments = Shellwords.shellsplit(line)

    redo if line.empty? 

    begin
      if BUILTINS[command]
          BUILTINS[command].call(*arguments)
      else
        pid = fork {
          exec line
        }

        Process.wait pid
      end
    rescue StandardError => e
      $stderr.puts e.to_s.red
    end
  end

  old_handler = trap(:int) do
    puts "Goodbye"
    old_handler.call if old_handler.respond_to?(:call)
  end

end
